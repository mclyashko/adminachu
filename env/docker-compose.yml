version: "3.9"

networks:
  adminachu-network:

services:
  postgres:
    container_name: postgres
    image: postgres:16
    volumes:
      - ./postgres/pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - adminachu-network
    ports:
      - "5432:5432"
    restart: "no"
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 10s
      timeout: 30s
      retries: 5

  adminachu:
    container_name: adminachu
    build:
      context: ../
      dockerfile: ./env/adminachu/DockerfileAdminachu
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_URL: ${POSTGRES_URL}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - adminachu-network
    ports:
      - "8080:8080"
      - "9095:9095"
    restart: "no"
    healthcheck:
      test: curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1
      interval: 10s
      timeout: 30s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
#  adminer:
#    container_name: adminer
#    image: adminer:4.8.1
#    networks:
#      - adminachu-network
#    ports:
#      - "9090:8080"
#    restart: "no"
#    depends_on:
#      adminachu:
#        condition: service_healthy